{"version":3,"sources":["Components/ContactsForm/ContactsForm.styled.js","Components/ContactsForm/ContactsForm.js","Components/ContactsListItem/ContactsListItem.styled.js","Components/ContactsListItem/ContactsListItem.js","Components/ContactsList/ContactsList.styled.js","Components/ContactsList/ContactsList.js","Components/Container/Container.styled.js","Components/Container/Container.js","Components/Filter/Filter.styled.js","Components/Filter/Filter.js","Components/App/App.js","constants/theme.js","index.js"],"names":["Form","styled","form","Label","label","props","theme","colors","primaryText","Input","input","FormBtn","button","secondaryText","black","shId","shortid","generate","ContactsForm","addContact","useState","name","setName","number","setNumber","onHandleChange","e","target","value","reset","onSubmit","preventDefault","id","type","pattern","title","onChange","required","ListItem","li","Item","span","DeleteBtn","ContactsListItem","remove","onClick","List","ul","ContactsList","contacts","map","SectionMain","section","SectionTitle","h2","Container","children","Filter","initialState","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","contact","find","toLowerCase","alert","prev","currentTarget","normalizedFilter","includes","getFilteredContacts","Object","freeze","white","green","red","blue","spacing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab44a45.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Input = styled.input`\n  border-radius: 5px;\n  margin-left: 10px;\n`;\n\nexport const FormBtn = styled.button`\n  margin: 10px;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n  border-radius: 23px;\n  cursor: pointer;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from 'react';\nimport { Form, FormBtn, Input, Label } from './ContactsForm.styled';\nimport shortid from 'shortid';\n\nconst shId = shortid.generate();\n\nexport default function ContactsForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onHandleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shId,\n      name,\n      number,\n    };\n    addContact(newContact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onHandleSubmit}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={onHandleChange}\n          value={name}\n          required\n        />\n      </Label>\n      <Label>\n        Phone:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер должен состоять цифр, и может содержать пробелы, тире, круглые скобки и может начинаться с +.\"\n          onChange={onHandleChange}\n          value={number}\n          required\n        />\n      </Label>\n      <FormBtn type=\"submit\">Add</FormBtn>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 5px;\n  /* border: ${props => `1px solid ${props.theme.colors.secondaryText}`}; */\n`;\n\nexport const Item = styled.span`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.2;\n  color: ${props => `${props.theme.colors.primaryText}`};\n`;\n\nexport const DeleteBtn = styled.button`\n  margin: 10px;\n  border: 1px solid grey;\n  border-radius: 23px;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { DeleteBtn, Item, ListItem } from './ContactsListItem.styled';\n\nexport const ContactsListItem = ({ id, name, number, remove }) => {\n  return (\n    <ListItem>\n      <Item>{name}</Item>\n      <Item>{number}</Item>\n      <DeleteBtn type=\"button\" onClick={() => remove(id)}>\n        remove\n      </DeleteBtn>\n    </ListItem>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n","import { ContactsListItem } from 'Components/ContactsListItem/ContactsListItem';\nimport { List } from './ContactsList.styled';\n\nexport const ContactsList = ({ contacts, remove }) => (\n  <List>\n    {contacts.map(({ id, name, number }) => (\n      <ContactsListItem key={id} id={id} name={name} number={number} remove={remove} />\n    ))}\n  </List>\n);\n","import styled from '@emotion/styled';\n\nexport const SectionMain = styled.section`\n  margin: 0 auto;\n  align-items: center;\n  text-align: center;\n  padding: 10vh 0;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n`;\n\nexport const SectionTitle = styled.h2`\n  padding: 5px;\n  font-weight: 900;\n  font-size: 16px;\n  line-height: 1.36;\n  letter-spacing: 0.06em;\n  color: ${props => `${props.theme.colors.primaryText}`};\n  text-transform: uppercase;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionMain, SectionTitle } from './Container.styled';\n\nexport const Container = ({ children, title }) => {\n  return (\n    <SectionMain>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionMain>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-weight: 700;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nexport const Input = styled.input`\n  border-radius: 5px;\n  margin-left: 10px;\n`;\n","import { Input, Label } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Filter:\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import ContactsForm from 'Components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'Components/ContactsList/ContactsList';\nimport { Container } from 'Components/Container/Container';\nimport { Filter } from 'Components/Filter/Filter';\nimport React, { useEffect, useState } from 'react';\n\nconst initialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    parsedContacts ? setContacts(parsedContacts) : setContacts(initialState);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = contact => {\n    const addingContact = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (addingContact) {\n      alert(`${contact.name} is already in contacts`);\n    }\n\n    setContacts(prev => [...prev, contact]);\n  };\n\n  const removeContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const onChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n  };\n\n  return (\n    <>\n      <Container title=\"Phonebook\">\n        <ContactsForm addContact={addContact} />\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter onChange={onChangeFilter} value={filter} />\n        <ContactsList contacts={getFilteredContacts()} remove={removeContact} />\n      </Container>\n    </>\n  );\n}\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    red: '#f44336',\n    blue: '#2196f3',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n  },\n  spacing: value => `${4 * value}px`,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport { ThemeProvider } from '@emotion/react';\nimport { theme } from 'constants/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}